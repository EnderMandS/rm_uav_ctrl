#!/usr/bin/env python
PACKAGE = "flight_pid"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# name param_type level description default min max
gen.add("fl_pwm_p", double_t, 0, "front left rotor pwm p", 0, -10, 10)
gen.add("fl_pwm_i", double_t, 0, "front left rotor pwm i", 0, -10, 10)
gen.add("fl_pwm_d", double_t, 0, "front left rotor pwm d", 0, -10, 10)

gen.add("fr_pwm_p", double_t, 0, "front right rotor pwm p", 0, -10, 10)
gen.add("fr_pwm_i", double_t, 0, "front right rotor pwm i", 0, -10, 10)
gen.add("fr_pwm_d", double_t, 0, "front right rotor pwm d", 0, -10, 10)

gen.add("rl_pwm_p", double_t, 0, "rear left rotor pwm p", 0, -10, 10)
gen.add("rl_pwm_i", double_t, 0, "rear left rotor pwm i", 0, -10, 10)
gen.add("rl_pwm_d", double_t, 0, "rear left rotor pwm d", 0, -10, 10)

gen.add("rr_pwm_p", double_t, 0, "rear right rotor pwm p", 0, -10, 10)
gen.add("rr_pwm_i", double_t, 0, "rear right rotor pwm i", 0, -10, 10)
gen.add("rr_pwm_d", double_t, 0, "rear right rotor pwm d", 0, -10, 10)

gen.add("angle_pitch_p", double_t, 0, "angle pitch p", 0, -10, 10)
gen.add("angle_pitch_i", double_t, 0, "angle pitch i", 0, -10, 10)
gen.add("angle_pitch_d", double_t, 0, "angle pitch d", 0, -10, 10)

gen.add("angle_yaw_p", double_t, 0, "angle yaw p", 0, -10, 10)
gen.add("angle_yaw_i", double_t, 0, "angle yaw i", 0, -10, 10)
gen.add("angle_yaw_d", double_t, 0, "angle yaw d", 0, -10, 10)

gen.add("angle_roll_p", double_t, 0, "angle roll p", 0, -10, 10)
gen.add("angle_roll_i", double_t, 0, "angle roll i", 0, -10, 10)
gen.add("angle_roll_d", double_t, 0, "angle roll d", 0, -10, 10)

gen.add("angle_vel_pitch_p", double_t, 0, "angle velocity pitch p", 0, -10, 10)
gen.add("angle_vel_pitch_i", double_t, 0, "angle velocity pitch i", 0, -10, 10)
gen.add("angle_vel_pitch_d", double_t, 0, "angle velocity pitch d", 0, -10, 10)

gen.add("angle_vel_yaw_p", double_t, 0, "angle velocity yaw p", 0, -10, 10)
gen.add("angle_vel_yaw_i", double_t, 0, "angle velocity yaw i", 0, -10, 10)
gen.add("angle_vel_yaw_d", double_t, 0, "angle velocity yaw d", 0, -10, 10)

gen.add("angle_vel_roll_p", double_t, 0, "angle velocity roll p", 0, -10, 10)
gen.add("angle_vel_roll_i", double_t, 0, "angle velocity roll i", 0, -10, 10)
gen.add("angle_vel_roll_d", double_t, 0, "angle velocity roll d", 0, -10, 10)

gen.add("vel_x_p", double_t, 0, "x velocity p", 0, -10, 10)
gen.add("vel_x_i", double_t, 0, "x velocity i", 0, -10, 10)
gen.add("vel_x_d", double_t, 0, "x velocity d", 0, -10, 10)

gen.add("vel_y_p", double_t, 0, "y velocity p", 0, -10, 10)
gen.add("vel_y_i", double_t, 0, "y velocity i", 0, -10, 10)
gen.add("vel_y_d", double_t, 0, "y velocity d", 0, -10, 10)

gen.add("vel_z_p", double_t, 0, "z velocity p", 0, -10, 10)
gen.add("vel_z_i", double_t, 0, "z velocity i", 0, -10, 10)
gen.add("vel_z_d", double_t, 0, "z velocity d", 0, -10, 10)

gen.add("position_x_p", double_t, 0, "x position p", 0, -10, 10)
gen.add("position_x_i", double_t, 0, "x position i", 0, -10, 10)
gen.add("position_x_d", double_t, 0, "x position d", 0, -10, 10)

gen.add("position_y_p", double_t, 0, "y position p", 0, -10, 10)
gen.add("position_y_i", double_t, 0, "y position i", 0, -10, 10)
gen.add("position_y_d", double_t, 0, "y position d", 0, -10, 10)

gen.add("position_z_p", double_t, 0, "z position p", 0, -10, 10)
gen.add("position_z_i", double_t, 0, "z position i", 0, -10, 10)
gen.add("position_z_d", double_t, 0, "z position d", 0, -10, 10)

gen.add("rotor_p_max", double_t, 0, "four rotors pwd p max", 9999, 0, 10000)
gen.add("rotor_i_max", double_t, 0, "four rotors pwd i max", 9999, 0, 10000)
gen.add("rotor_d_max", double_t, 0, "four rotors pwd d max", 9999, 0, 10000)

exit(gen.generate(PACKAGE, "flight_pid", "flight_pid"))