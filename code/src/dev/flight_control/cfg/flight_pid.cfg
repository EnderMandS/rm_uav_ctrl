#!/usr/bin/env python
PACKAGE = "flight_pid"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# name param_type level description default min max

# gen.add("position_x_p", double_t, 0, "x position p", 0.2, -10, 10)
# gen.add("position_x_i", double_t, 0, "x position i", 0, -10, 10)
# gen.add("position_x_d", double_t, 0, "x position d", 0.05, -10, 10)
# gen.add("position_x_out_max", double_t, 0, "x position pid out max", 2, 0, 10) # vel max
# gen.add("position_x_p_max", double_t, 0, "x position p max", 2, 0, 10)
# gen.add("position_x_i_max", double_t, 0, "x position i max", 2, 0, 10)
# gen.add("position_x_d_max", double_t, 0, "x position d max", 2, 0, 10)

# gen.add("position_y_p", double_t, 0, "y position p", 0.2, -10, 10)
# gen.add("position_y_i", double_t, 0, "y position i", 0, -10, 10)
# gen.add("position_y_d", double_t, 0, "y position d", 0.05, -10, 10)
# gen.add("position_y_out_max", double_t, 0, "y position pid out max", 2, 0, 10) # vel max
# gen.add("position_y_p_max", double_t, 0, "y position p max", 2, 0, 10)
# gen.add("position_y_i_max", double_t, 0, "y position i max", 2, 0, 10)
# gen.add("position_y_d_max", double_t, 0, "y position d max", 2, 0, 10)

# gen.add("position_z_p", double_t, 0, "z position p", 0.2, -10, 10)
# gen.add("position_z_i", double_t, 0, "z position i", 0, -10, 10)
# gen.add("position_z_d", double_t, 0, "z position d", 0.05, -10, 10)
# gen.add("position_z_out_max", double_t, 0, "z position pid out max", 2, 0, 10) # vel max
# gen.add("position_z_p_max", double_t, 0, "z position p max", 2, 0, 10)
# gen.add("position_z_i_max", double_t, 0, "z position i max", 2, 0, 10)
# gen.add("position_z_d_max", double_t, 0, "z position d max", 2, 0, 10)

# gen.add("vel_x_p", double_t, 0, "x velocity p", 0.2, -10, 10)
# gen.add("vel_x_i", double_t, 0, "x velocity i", 0, -10, 10)
# gen.add("vel_x_d", double_t, 0, "x velocity d", 0.025, -10, 10)
# gen.add("vel_x_out_max", double_t, 0, "x velocity pid out max", 1, 0, 10) # accel max
# gen.add("vel_x_p_max", double_t, 0, "vel_x p max", 1, 0, 10)
# gen.add("vel_x_i_max", double_t, 0, "vel_x i max", 1, 0, 10)
# gen.add("vel_x_d_max", double_t, 0, "vel_x d max", 1, 0, 10)

# gen.add("vel_y_p", double_t, 0, "y velocity p", 0.2, -10, 10)
# gen.add("vel_y_i", double_t, 0, "y velocity i", 0, -10, 10)
# gen.add("vel_y_d", double_t, 0, "y velocity d", 0.025, -10, 10)
# gen.add("vel_y_out_max", double_t, 0, "y velocity pid out max", 1, 0, 10) # accel max
# gen.add("vel_y_p_max", double_t, 0, "vel_y p max", 1, 0, 10)
# gen.add("vel_y_i_max", double_t, 0, "vel_y i max", 1, 0, 10)
# gen.add("vel_y_d_max", double_t, 0, "vel_y d max", 1, 0, 10)

gen.add("vel_z_p", double_t, 0, "z velocity p", 1, -10, 10)
gen.add("vel_z_i", double_t, 0, "z velocity i", 0, -10, 10)
gen.add("vel_z_d", double_t, 0, "z velocity d", 0, -10, 10)
gen.add("vel_z_out_max", double_t, 0, "z velocity pid out max", 1, 0, 10) # accel thrust
gen.add("vel_z_p_max", double_t, 0, "vel_z p max", 1, 0, 10)
gen.add("vel_z_i_max", double_t, 0, "vel_z i max", 0.75, 0, 10)
gen.add("vel_z_d_max", double_t, 0, "vel_z d max", 0.1, 0, 10)

# gen.add("thrust_p", double_t, 0, "thrust p", 0.25, -1, 1)
# gen.add("thrust_i", double_t, 0, "thrust i", 0.05, -1, 1)
# gen.add("thrust_d", double_t, 0, "thrust d", 0.05, -1, 1)
# gen.add("thrust_out_max", double_t, 0, "thrust out max", 1, 0, 1) # 0~1
# gen.add("thrust_p_max", double_t, 0, "thrust p max", 1, 0, 1)
# gen.add("thrust_i_max", double_t, 0, "thrust i max", 0.75, 0, 1)
# gen.add("thrust_d_max", double_t, 0, "thrust d max", 0.75, 0, 1)

gen.add("acc_x_p", double_t, 0, "x accel p", 5, -10, 10)
gen.add("acc_x_i", double_t, 0, "x accel i", 0.1, -10, 10)
gen.add("acc_x_d", double_t, 0, "x accel d", 0, -10, 10)
gen.add("acc_x_out_max", double_t, 0, "x accel pid out max", 15, 0, 45) # angle max
gen.add("acc_x_p_max", double_t, 0, "x accel p max", 15, 0, 45)
gen.add("acc_x_i_max", double_t, 0, "x accel i max", 10, 0, 45)
gen.add("acc_x_d_max", double_t, 0, "x accel d max", 10, 0, 45)

gen.add("acc_y_p", double_t, 0, "y accel p", 5, -10, 10)
gen.add("acc_y_i", double_t, 0, "y accel i", 0.1, -10, 10)
gen.add("acc_y_d", double_t, 0, "y accel d", 0, -10, 10)
gen.add("acc_y_out_max", double_t, 0, "y accel pid out max", 15, 0, 45) # angle max
gen.add("acc_y_p_max", double_t, 0, "y accel p max", 15, 0, 45)
gen.add("acc_y_i_max", double_t, 0, "y accel i max", 10, 0, 45)
gen.add("acc_y_d_max", double_t, 0, "y accel d max", 10, 0, 45)

gen.add("acc_z_p", double_t, 0, "z accel p", 0.5, -2, 2)
gen.add("acc_z_i", double_t, 0, "z accel i", 1, -2, 2)
gen.add("acc_z_d", double_t, 0, "z accel d", 0, -2, 2)
gen.add("acc_z_out_max", double_t, 0, "z accel pid out max", 1, 0, 1) # thrust
gen.add("acc_z_p_max", double_t, 0, "z accel p max", 0.7, 0, 1)
gen.add("acc_z_i_max", double_t, 0, "z accel i max", 0.7, 0, 1)
gen.add("acc_z_d_max", double_t, 0, "z accel d max", 0, 0, 1)

gen.add("angle_pitch_p", double_t, 0, "angle pitch p", 1, -10, 10)
gen.add("angle_pitch_i", double_t, 0, "angle pitch i", 0, -10, 10)
gen.add("angle_pitch_d", double_t, 0, "angle pitch d", 0.5, -10, 10)
gen.add("angle_pitch_out_max", double_t, 0, "angle pitch out max", 10, 0, 30) # angle vel max
gen.add("angle_pitch_p_max", double_t, 0, "angle pitch p max", 10, 0, 30)
gen.add("angle_pitch_i_max", double_t, 0, "angle pitch i max", 10, 0, 30)
gen.add("angle_pitch_d_max", double_t, 0, "angle pitch d max", 10, 0, 30)

# gen.add("angle_yaw_p", double_t, 0, "angle yaw p", 3, -10, 10)
# gen.add("angle_yaw_i", double_t, 0, "angle yaw i", 0, -10, 10)
# gen.add("angle_yaw_d", double_t, 0, "angle yaw d", 0.75, -10, 10)
# gen.add("angle_yaw_out_max", double_t, 0, "angle yaw out max", 30, 0, 90) # angle vel max
# gen.add("angle_yaw_p_max", double_t, 0, "angle yaw p max", 30, 0, 90)
# gen.add("angle_yaw_i_max", double_t, 0, "angle yaw i max", 20, 0, 90)
# gen.add("angle_yaw_d_max", double_t, 0, "angle yaw d max", 20, 0, 90)

gen.add("angle_roll_p", double_t, 0, "angle roll p", 1, -10, 10)
gen.add("angle_roll_i", double_t, 0, "angle roll i", 0, -10, 10)
gen.add("angle_roll_d", double_t, 0, "angle roll d", 0.5, -10, 10)
gen.add("angle_roll_out_max", double_t, 0, "angle roll out max", 10, 0, 30) # angle vel max
gen.add("angle_roll_p_max", double_t, 0, "angle roll p max", 10, 0, 30)
gen.add("angle_roll_i_max", double_t, 0, "angle roll i max", 10, 0, 30)
gen.add("angle_roll_d_max", double_t, 0, "angle roll d max", 10, 0, 30)

# gen.add("angle_vel_pitch_p", double_t, 0, "angle velocity pitch p", 0.01, -10, 10)
# gen.add("angle_vel_pitch_i", double_t, 0, "angle velocity pitch i", 0, -10, 10)
# gen.add("angle_vel_pitch_d", double_t, 0, "angle velocity pitch d", 0.002, -10, 10)
# gen.add("angle_vel_pitch_out_max", double_t, 0, "angle velocity pitch out max", 1, 0, 1) # PWM
# gen.add("angle_vel_pitch_p_max", double_t, 0, "angle velocity pitch p max", 1, 0, 1)
# gen.add("angle_vel_pitch_i_max", double_t, 0, "angle velocity pitch i max", 1, 0, 1)
# gen.add("angle_vel_pitch_d_max", double_t, 0, "angle velocity pitch d max", 1, 0, 1)

# gen.add("angle_vel_yaw_p", double_t, 0, "angle velocity yaw p", 0.01, -10, 10)
# gen.add("angle_vel_yaw_i", double_t, 0, "angle velocity yaw i", 0, -10, 10)
# gen.add("angle_vel_yaw_d", double_t, 0, "angle velocity yaw d", 0.002, -10, 10)
# gen.add("angle_vel_yaw_out_max", double_t, 0, "angle velocity yaw out max", 1, 0, 1) # PWM
# gen.add("angle_vel_yaw_p_max", double_t, 0, "angle velocity yaw p max", 1, 0, 1)
# gen.add("angle_vel_yaw_i_max", double_t, 0, "angle velocity yaw i max", 0.75, 0, 1)
# gen.add("angle_vel_yaw_d_max", double_t, 0, "angle velocity yaw d max", 0.75, 0, 1)

# gen.add("angle_vel_roll_p", double_t, 0, "angle velocity roll p", 0.01, -10, 10)
# gen.add("angle_vel_roll_i", double_t, 0, "angle velocity roll i", 0, -10, 10)
# gen.add("angle_vel_roll_d", double_t, 0, "angle velocity roll d", 0.002, -10, 10)
# gen.add("angle_vel_roll_out_max", double_t, 0, "angle velocity roll out max", 1, 0, 1) # PWM
# gen.add("angle_vel_roll_p_max", double_t, 0, "angle velocity roll p max", 1, 0, 1)
# gen.add("angle_vel_roll_i_max", double_t, 0, "angle velocity roll i max", 0.75, 0, 1)
# gen.add("angle_vel_roll_d_max", double_t, 0, "angle velocity roll d max", 0.75, 0, 1)

exit(gen.generate(PACKAGE, "flight_pid", "flight_pid"))